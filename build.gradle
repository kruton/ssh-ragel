apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

mainClassName = "org.connectbot.sshlib.Main"

public String getPlatform(String platform) {
  switch (platform.replaceAll(' ', '').toLowerCase()) {
    case ~/.*linux.*/:  return 'linux'
    case ~/.*darwin.*/: return 'darwin'
    case ~/.*osx.*/:    return 'darwin'
    case ~/.*win.*/:    return 'windows'
    default:            return null
  }
}

ext {
  platform = getPlatform(System.properties['os.name'])
}

task ragel() {
  inputs.dir 'src/main/ragel'

  ext.ragelOutputDir = file('build/generated-src/java/org/connectbot/sshlib/parser')
  outputs.dir ragelOutputDir

  doFirst {
    def ragelPath = "ragel"
    def command = "which ragel"

    if (platform == 'windows') {
      command = "where ragel"
    }

    def proc = command.execute()
    proc.waitFor()
    def rpath = "${proc.in.text}"
    if (rpath != null && rpath.length() > 0 && rpath.contains('ragel')) {
      ragelPath = rpath.trim()
      ragelOutputDir.mkdirs()
    } else {
      logger.warn('')
      logger.warn('The Ragel finite-state machine compiler could not be found on the path.')
      logger.warn('This must be installed for compilation to succeed.')
      logger.warn('To install:')
      logger.warn('  - Debian & Debian Variants: sudo apt-get install ragel')
      logger.warn('  - OS X with Homebrew: brew install ragel')
      logger.warn('  - Windows: download from http://www.jgoettgens.de/Meine_Bilder_und_Dateien/ragel-vs2012.7z')
      logger.warn('For more installation information, please visit http://www.complang.org/ragel/')
      logger.warn('')

      throw new GradleException('Please install ragel to continue.')
    }

    // Run ragel on all input files
    inputs.getFiles().each { File file ->
      def ragelCmd = ragelPath + ' -J -o ' + (ragelOutputDir.getPath() + '/' + file.name - '.rl' + ' ') + file
      def result = ragelCmd.execute()
      result.waitFor()
      if (result.exitValue()) {
         result.err.eachLine { logger.error(it) }
         throw new TaskExecutionException("Error while running gradle");
      }
    }
  }
}

compileJava {
  dependsOn ragel
  source = ['src/main/java', 'build/generated-src/java']
  options.fork = true
}
